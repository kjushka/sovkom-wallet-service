version: "3.9"
networks:
  network:
    driver: bridge

volumes:
  test:
    name: test

services:
  wallet-service:
    build:
      dockerfile: Dockerfile
    depends_on:
      redis:
        condition: service_healthy
      pgs:
        condition: service_healthy
    container_name: wallet-service
    environment:
      #PGS
      - PG_HOST=postgres
      - PG_PORT=5432
      - PG_USER=postgres
      - PG_PASS=postgres
      - PG_WALLET_DATABASE=wallet_service
      - PG_TIMEOUT=200ms

      #REDIS
      - REDIS_PORT=6379
      - REDIS_TIMEOUT=200ms

      #common
      - CBR_API_URL=https://api.exchangerate.host
      - CBR_API_TIMEOUT=5s
    ports:
      - "8080:8080"
    networks:
      - network
    user: root
    restart: on-failure

  redis:
    container_name: cache
    image: redis:4-alpine

    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s

    ports:
      - "6379:6379"

    volumes:
#      - ./redis-data:/var/lib/redis
      - ./redis.conf:/usr/local/etc/redis/redis.conf

    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_REPLICATION_MODE=master
    networks:
      - network
    restart: on-failure

  pgs:
    container_name: postgres
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      #- ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 10s
      retries: 5
    restart: always
    networks:
      - network
